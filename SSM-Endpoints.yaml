
AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template to set up SSM access, including VPC endpoints, IAM roles, and security group rules'

Parameters:
# Makes some nice dropdowns of existing resources instead of having to go off searching for the IDs
  VpcId:
    Type: List<AWS::EC2::VPC::Id>
    Description: The VPC ID where the resources will be created

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of Subnet IDs where the SSM endpoints will be created

  SecurityGroupId:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: The Security Group ID to modify for SSM access

Resources:
  # SSM VPC Endpoints
  SSMEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ssm'
      VpcId: !Select [0, !Ref VpcId]  # Need to make sure we convert to an array because it wants that for some reason
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref SubnetIds
      SecurityGroupIds: 
        - !Select [0, !Ref SecurityGroupId]
      Tags:
      - Key: Name
        Value: SSM-Endpoint

  SSMMessagesEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ssmmessages'
      VpcId: !Select [0, !Ref VpcId] # Need to make sure we convert to an array because it wants that for some reason, again
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref SubnetIds
      SecurityGroupIds: 
        - !Select [0, !Ref SecurityGroupId]
      Tags:
      - Key: Name
        Value: SSM-Messages-Endpoint

  EC2MessagesEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ec2messages'
      VpcId: !Select [0, !Ref VpcId] # Need to make sure we convert to an array because it wants that for some reason, again, again.
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SubnetIds: !Ref SubnetIds
      SecurityGroupIds: 
        - !Select [0, !Ref SecurityGroupId]
      Tags:
      - Key: Name
        Value: SSM-EC2Messages-Endpoint

  # IAM Role for SSM
  SSMIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: SSM-Access-Role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Tags:
        - Key: Name
          Value: SSM Access Role

  SSMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: SSM-Instance-Profile
      Path: "/"
      Roles: 
        - !Ref SSMIAMRole

  # Security Group Rule
  SSMSecurityGroupRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Select [0, !Ref SecurityGroupId]
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      SourceSecurityGroupId: !Select [0, !Ref SecurityGroupId]

  RDPSecurityGroupRule: # For RDP access, because im a Windows guy
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Select [0, !Ref SecurityGroupId]
      IpProtocol: tcp
      FromPort: 3389
      ToPort: 3389
      SourceSecurityGroupId: !Select [0, !Ref SecurityGroupId]

Outputs:
  SSMIAMRoleArn:
    Description: ARN of the IAM Role created for SSM
    Value: !GetAtt SSMIAMRole.Arn